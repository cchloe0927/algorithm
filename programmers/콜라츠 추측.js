/* 문제
Collatz : 주어진 수가 1이 될 때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다.
1-1. 입력된 수가 짝수라면 2로 나눕니다. 
1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다. 
2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.
위 작업을 몇 번이나 반복해야 하는지 반환하는 함수, solution을 완성해 주세요.
단, 주어진 수가 1인 경우에는 0을, 작업을 500번 반복할 때까지 1이 되지 않는다면 –1을 반환
*/

function solution(num) {
  let count = 0;
  if (num === 1) {
    return 0; //전달된 인자가 1인 경우에는 0을 봔한하고 While문을 돌릴 필요가 없음!
  }

  while (true) {
    if (num % 2 == 0) {
      num = num / 2;
    } else {
      num = num * 3 + 1;
    }
    //console.log(num); //조건에 따라 값이 계산되고 한번 돌면 1씩 카운트해줌
    count++;

    if (num === 1) {
      break; //결과값이 1이 나왔을 때 while문을 빠져나감
    }

    if (count === 500) {
      count = -1;
      break; //결과값이 나오기 위해 반복 횟수가 500이상이면 -1를 출력하고 while문을 빠져나감
    }
  }
  return count;
}

let n = 1;
console.log(solution(n)); //8

/*문제풀이
while문 조건식의 평가 결과가 언제나 참이면 무한루프를 돌기 때문에 무한루프에서 탈출하기 위해서는 
코드 블록 내에 if문으로 탈출 조건을 만들고 break문으로 코드블록을탈출한다.
*/
